<?php

// Definición del bloque

function govi_sdqs_block_info() {
    $block = array();

    $block['govi_sdqs_block'] = array(
        'info' => 'Govi SDQS',
        'cache' => DRUPAL_CACHE_PER_PAGE,
    );

    return $block;
}

function govi_sdqs_block_view($delta = '') {

    $block = array();

    $block['subject'] = 'Servicio al ciudadano';
    $block['content'] = govi_sdqs_block_content();

    return $block;
}

function govi_sdqs_block_content() {

        return theme('govi_sdqs_display');
}

// Manejador de templates del módulo
function govi_sdqs_theme($existing, $type, $theme, $path) {

    return array(
        'govi_sdqs_display' => array(
            'template' => 'templates/sdqs',
        ),

        'govi_sdqs_form' => array(
            'render element' => 'form',
            'template' => 'templates/form',
        ),
    );
}

function theme_govi_sdqs_form ($variables) {

    drupal_flush_all_caches();
    $form = $variables['form'];
    return $form;
}

// Define recursos para manejar las operaciones del módulo
// i.e: crear, consultar ...
function govi_sdqs_menu() {

    $items = array();

    $items['admin/config/features/sdqs-client'] = array(
        'title' => 'Cliente Sistema Distrital de Quejas y Soluciones',
        'descriptión' => 'Configuración del Cliente SOAP del SDQS',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('govi_sdqs_admin_config_main_form'),
        'access arguments' => array('access administration pages'),
        'file' => 'includes/govi-sdqs.admin.inc'
    );

    $items['govi-sdqs/crear'] = array(
        'title' => 'Crear petición',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('govi_sdqs_crear_peticion_form'),
        'access callback' => TRUE,
    );

    // Deshabilita recurso debido que el alcance para la
    // primera versión redireccionará directamente al SDQS
    // hasta que exista un servicio que permita consultar
    // el detalle de la petición
    /*
    $items['govi-sdqs/consultar'] = array(
        'title' => 'Consultar petición',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('govi_sdqs_consultar_peticion_form'),
        'access arguments' => array('access content'),
        'access callback' => TRUE,
        //'theme callback' => 'govi_form_popup',
        //'type' => MENU_CALLBACK
    );


    $items['govi-sdqs/detalle-peticion'] = array(
        'title' => 'Detalles de la consulta',
        'page callback' => 'govi_sdqs_ver_detalles',
        'access arguments' => array('access content'),
        'access callback' => TRUE,
        'theme callback' => 'govi_sdqs_details',
        'type' => MENU_CALLBACK
    );
    */

    return $items;
}

function govi_sdqs_crear_peticion_form($form, &$form_state) {

    $form = array();

    $form['#theme'] = 'govi_sdqs_form';

    $form['#prefix'] = '<div id="govi-sdqs-form-container">';
    $form['#suffix'] = '</div>';

    $temas = variable_get('govi_sdqs_lista_tema');
    $entidades = variable_get('govi_sdqs_lista_entidades');
    $tipos_peticion = variable_get('govi_sdqs_lista_tipo_peticion');
    $tipos_id = variable_get('govi_sdqs_lista_tipos_id');

    $form['datos_personales'] = array(
        '#type' => 'fieldset',
        '#title' => 'Datos persona natural',
        '#weight' => -1
    );

    $form['datos_personales']['nombre'] = array(
        '#type' => 'textfield',
        '#title' => 'Nombre',
        '#description' => 'Ingrese su primer nombre',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#required' => TRUE,
        '#size' => 60,
    );

    $form['datos_personales']['apellido'] = array(
        '#type' => 'textfield',
        '#title' => 'Apellido',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#description' => 'Ingrese su primer apellido',
        '#required' => TRUE,
        '#size' => 60
    );

    $opts_ids = array();

    foreach ($tipos_id as $tipo) {
        $opts_ids[$tipo['abreviatura']] = $tipo['nombre'];
    }

    $form['datos_personales']['tipo_identificacion'] = array(
        '#type' => 'select',
        '#title' => 'Tipo de identificación',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_ids) ? $opts_ids : array(),
        '#required' => TRUE
    );

    $form['datos_personales']['numero_identificacion'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'Numero identificación',
        '#required' => TRUE
    );

    $form['datos_personales']['correo_electronico'] = array(
        '#type' => 'textfield',
        '#title' => 'Correo electrónico',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#required' => TRUE
    );
    $opts_solicitante = array();
    $form['datos_personales']['tipo_solicitante'] = array(
        '#type' => 'select',
        '#title' => 'Tipo de solicitante',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_solicitante) ? $opts_solicitante : array(),
        '#required' => TRUE
    );
    $opts_razon_social = array();
    $form['datos_personales']['razon_social'] = array(
        '#type' => 'select',
        '#title' => 'Razon social',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_razon_social) ? $opts_razon_social : array(),
        '#required' => TRUE
    );

    $form['datos_personales']['nit'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'NIT',
        '#required' => FALSE
    );
    $opts_pais = array();
    $form['datos_personales']['pais'] = array(
        '#type' => 'select',
        '#title' => 'País',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_pais) ? $opts_pais : array(),
        '#required' => TRUE
    );
    $opts_pais = array();
    $opts_departamento = array();
    $form['datos_personales']['departamento'] = array(
        '#type' => 'select',
        '#title' => 'Departamento',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_departamento) ? $opts_departamento : array(),
        '#required' => TRUE
    );
    $opts_municipio = array();
    $form['datos_personales']['municipio'] = array(
        '#type' => 'select',
        '#title' => 'Municipio',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_municipio) ? $opts_municipio : array(),
        '#required' => TRUE
    );
    $form['datos_personales']['direccion'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'Dirección',
        '#required' => TRUE
    );
    $form['datos_personales']['telefono_fijo'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'Teléfono Fijo',
        '#required' => TRUE
    );
    $form['datos_personales']['telefono_movil'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'Teléfono Móvil',
        '#required' => TRUE
    );


    $form['pqr_crear'] = array(
        '#type' => 'fieldset',
        '#title' => 'Crear petición',
    );

    $opts_peticion = array();

    foreach ($tipos_peticion as $tipo) {
        $opts_peticion[$tipo['id']] = $tipo['nombre'];
    }

    $form['pqr_crear']['tipo_peticion'] = array(
        '#type' => 'select',
        '#title' => 'Tipo de petición',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_peticion) ? $opts_peticion : array(),
        '#required' => TRUE
    );

    $opts_temas = array();

    foreach ($temas as $tema) {
        $opts_temas[$tema['id']] = $tema['nombre'];
    }

    // TODO: implementar autocomletado controlado desde el cliente
    // con JavaScript
    $opts_entidades = array();

    foreach ($entidades as $entidad) {
        $opts_entidades[$entidad['id']] = $entidad['nombre'];
    }

    $form['pqr_crear']['asunto'] = array(
        '#type' => 'textarea',
        '#title' => 'Asunto',
        '#cols' => 30,
        '#attributes' => array('class' => array('pure-u-1')),
        '#required' => TRUE,
    );

    $form['pqr_crear']['archivo'] = array(
        '#type' => 'managed_file',
        '#title' => 'Seleccione un archivo',
        '#attributes' => array('class' => array('pure-u-23-24')),
    );
    $opts_respuesta = array();
    $form['pqr_crear']['respuesta'] = array(
        '#type' => 'select',
        '#title' => 'Medio de respuesta',
        '#description' => '¿Cómo deseas recibir la respuesta?',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#options' => !empty($opts_respuesta) ? $opts_respuesta : array(),
        '#required' => TRUE
    );
    $form['pqr_crear']['costo_respuesta'] = array(
        '#type' => 'textfield',
        '#attributes' => array('class' => array('pure-u-23-24')),
        '#title' => 'Costo asociado a respuesta',
        '#description' => 'Información sobre posibles costos asociados a la respuesta',
        '#required' => FALSE
    );

    $form['captcha'] = array(
        '#type' => 'captcha',
        //'#captcha_type' => 'captcha/Math',
        // Utilice este tipo para sitios en producción */
        '#captcha_type' => 'recaptcha/reCAPTCHA',
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Enviar',
        '#ajax' => array(
            'callback' => 'govi_sdqs_crear_peticion_ajax_submit',
            'wrapper' => 'govi-sdqs-form-container',
            'method' => 'replaceWith',
            'effect' => 'fade',
        ),
        '#attributes' => array(
            'class' => array(
                'pure-button',
                'pure-button-primary'
            ),
        ),
    );

    $form['#attributes']['class'][] = 'pure-form';
    $form['#attributes']['class'][] = 'pure-form-stacked';

    return $form;
}

function govi_sdqs_crear_peticion_ajax_submit($form, &$form_state) {

    global $base_url;
    $output = '';

    $codigo_dependencia = variable_get('sdqs_dependencia');
    $codigo_entidad = variable_get('sdqs_entidad');
    $id_sector = variable_get('sdqs_sector');

    if ($form_state['executed']) {

        $nid_log = govi_sdqs_create_log_node();

        $service = wsclient_service_load('service_radicacion_canal');
        $obs = '';

        $obs .= 'Este requerimiento ha sido realizado a través del módulo Govi SDQS ';
        $obs .= 'de la Distribución Distrital CMS. Los datos de identificación del sitio ';
        $obs .= 'web son los siguientes:' . PHP_EOL;
        $obs .= 'Nombre de dominio: ' . $base_url . PHP_EOL;
        $obs .= 'Direccion IP: ' . ip_address() . PHP_EOL;

        $data = array(
            'parameters' => array(
                'requerimiento' => array(
                    'apellidos' => $form_state['values']['apellido'],
                    'nombres' => $form_state['values']['nombre'],
                    'codigoTipoIdentificacion' => $form_state['values']['tipo_identificacion'],
                    'numeroDocumento' => $form_state['values']['numero_identificacion'],
                    'email' => $form_state['values']['correo_electronico'],
                    'asunto' => $form_state['values']['asunto'],
                    'clasificacionRequerimiento' => array(
                        // Valores standard provisionales mientas se
                        // validan con el SDQS con el fin de crear una clasificación
                        // específica para los requerimientos realizados desde los sitios
                        // web que utilizan el servicio.
                        // El código dependencia será gestionado desde el backend con
                        // base a la lista entregada por el equipo funcional de la DDSC
                        'codigoDependencia' => $codigo_dependencia,
                        'codigoEntidad' => $codigo_entidad,
                        'codigoSector' => $id_sector,
                        'codigoSubtema' => 35, //Traslado por no competencia
                    ),
                    'codigoCiudad' => 149,
                    'codigoPais' => 47,
                    'codigoDepartamento' => 3,
                    'numeroFolios' => 0,
                    'prioridad' => 0,
                    'codigoTipoRequerimiento' => $form_state['values']['tipo_peticion'],
                    'entidadQueIngresaRequerimiento' => $codigo_entidad,
                    'codigoCanal' => 7,
                    // TODO: Número único del log de registros del sitio web
                    'numeroRadicado' => node_load($nid_log)->field_sdqs_log_count['und'][0]['value'],
                    'observaciones' => $obs,
                ),
            ),
        );

        if (!empty($form_state['values']['archivo'])) {

            $data['parameters']['requerimiento']['documento'] = array();
            $file = file_load($form_state['values']['archivo']);
            $content = file_get_contents(file_directory_temp().'/'.$file->filename);

            $data['parameters']['requerimiento']['documento']['contenidoDocumento'] = base64_encode($content);
            $data['parameters']['requerimiento']['documento']['mimeType'] = $file->filemime;
            $data['parameters']['requerimiento']['documento']['nombreArchivo'] = $file->filename;
        }

        try {
            $result = $service->invoke('registrarRequerimiento', $data);

            $output .= '<h3>Solicitud enviada con éxito!</h3>';
            $output .= '<p>Respetado(a) ' .$form_state['values']['nombre']. ', por favor tome nota de los siguientes ';
            $output .= 'datos para hacer seguimiento a su petición.' . PHP_EOL;
            $output .= 'Esta información ha sido enviada al correo electrónico: ' . $form_state['values']['correo_electronico'];
            $output .= '<hr/>';
            $output .= '<ul><li>Fecha de solicitud: ' . $result->return->fechaCreacion . '</li>';
            $output .= '<li>Codigo de requerimiento SDQS: ' . $result->return->codigoRequerimiento . '</li>';
            $output .= '<li>Número de identificación del requerimiento en el sitio: ' . $result->return->numeroRadicado . '</li></ul>';
            govi_sdqs_log_event($form_state, $nid_log, $result);

        } catch (WSClientException $exception) {

            $output .= '<h3>Ha ocurrido un error inesperado</h3>';
            $output .= '<p>Consulte con el administador para verificar el log de errores</p>';

            watchdog('govi_sdqs', $exception->__toStrig());
            govi_sdqs_log_event($form_state, $nid_log, $result, $e);

        }

    } else {

        $output = $form;
    }

    return $output;
}

/**
 * Método que crea el nodo que almacenará
 * los detalles de la petición. Inicialmente es creado
 * con un nombre generico para que el módulo serial
 * cree el numero autoincremental como identificacion
 * del requerimiento interno del sitio.
 */

function govi_sdqs_create_log_node() {

    global $user;

    $node = new stdClass();
    $node->type = 'sdqs_logs';

    $node->title = 'Requerimiento sin iniciar';
    node_object_prepare($node);

    $node->language = LANGUAGE_NONE;
    $node->uid = $user->uid;
    $node->status = 0;
    $node->promote = 0;
    $node->comment = 0;

    node_save($node);
    return $node->nid;
}

/**
 * Método que actualiza los detalles del
 * requerimiento en el nodo previamente creado
 * actualizando el titulo genérico con el
 * identificador interno del requerimiento en
 * el sitio.
 */

function govi_sdqs_log_event($form_state, $nid_log, $result, $error = FALSE) {

    drupal_set_message('Actualizando log de eventos');

    $node = node_load($nid_log);

    $node->title = 'Requerimiento Radicado No.'. $node->field_sdqs_log_count['und'][0]['value'];
    $node->field_sdqs_fecha_radicacion['und'][0]['value'] = format_date(REQUEST_TIME, 'long');
    $node->field_sdqs_correo_peticionario['und'][0]['value'] = $form_state['values']['correo_electronico'];
    $node->field_sdqs_tipo_id['und'][0]['value'] = $form_state['values']['tipo_identificacion'];
    $node->field_sdqs_id_peticionario['und'][0]['value'] = $form_state['values']['numero_identificacion'];
    $node->field_sdqs_numero['und'][0]['value'] = $result->return->codigoRequerimiento;
    $node->field_sdqs_codigo_respuesta = "OK";

    node_save($node);
}
