<?php

// Definición del bloque

function govi_sdqs_block_info() {
    $block = array();

    $block['govi_sdqs_block'] = array(
        'info' => 'Govi SDQS',
        'cache' => DRUPAL_CACHE_PER_PAGE,
    );

    return $block;
}

function govi_sdqs_block_view($delta = '') {

    $block = array();

    $block['subject'] = 'Servicio al ciudadano';
    $block['content'] = govi_sdqs_block_content();

    return $block;
}

function govi_sdqs_block_content() {

    return theme('govi_sdqs_display');
}

function theme_govi_sdqs_display($variables) {

    $output = array();

    $output['#theme'] = 'govi_sdqs';
    $output['#type'] = 'markup';
    $output['#variables'] = $variables;

    return $output;
}


// Manejador de templates del módulo
function govi_sdqs_theme($existing, $type, $theme, $path) {

    return array(
        'govi_sdqs_display' => array(
            'variables' => array('uno' => '1', 'dos' => '2', 'tres' => '3'),
            'template' => 'templates/sdqs',
        ),

        'govi_form_popup' => array(
            'render element' => 'page',
            'template' => 'templates/popup'
        ),
    );
}

function govi_sdqs_page_alter(&$page) {
    if (isset($page['content']['system_main']['#popup'])) {
        $page['#theme'] = 'govi_form_popup';
    }
}

// Define recursos para manejar las operaciones del módulo
// i.e: crear, consultar ... 
function govi_sdqs_menu() {

    $items = array();

    $items['govi-sdqs/crear'] = array(
        'title' => 'Crear petición',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('govi_sdqs_crear_peticion_form'),
        'access arguments' => array('access content'),
        'access callback' => TRUE,
        'theme callback' => 'govi_form_popup',
        'type' => MENU_CALLBACK
    );

    return $items;
}

function govi_sdqs_crear_peticion_form($form, &$form_state) {

    $form = array();

    $form['pqr_tipo_peticion'] = array(
        '#type' => 'select',
        '#title' => 'Tipo de petición',
        '#description' => 'Lorem ipsum dolor sit amet',
        '#options' => array(
            0 => 'tipo 1',
            1 => 'tipo 2',
        ),
        '#required' => TRUE
    );

    $form['pqr_tema'] = array(
        '#type' => 'select',
        '#title' => 'Tema',
        '#description' => 'Lorem ipsum dolor sit amet',
        '#options' => array(
            0 => 'tema 1',
            1 => 'tema 2',
        ),
        '#required' => TRUE
    );

    // Debería seleccionar los términos de una taxonomía
    $form['pqr_entidad'] = array(
        '#type' => 'select',
        '#title' => 'Entidad',
        '#description' => 'Lorem ipsum dolor sit amet',
        '#options' => array(
            0 => 'Entidad 1',
            1 => 'Entidad 2',
        ),
        '#required' => TRUE
        
    );

    $form['pqr_archivo'] = array(
        '#type' => 'file',
        '#title' => 'Seleccione un archivo',
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Enviar',
        '#ajax' => array(
            'callback' => 'govi_sdqs_crear_peticion_ajax_submit',
            'wrapper' => 'govi-sdqs-crear-peticion-form',
            'method' => 'replaceWith',
            'effect' => 'fade',
        ),
    );

    $form['#popup'] = TRUE;

    return $form;
}

function govi_sdqs_crear_peticion_ajax_submit($form, &$form_state) {

    $html = '<h1>Enviado!</h1>';

    $commands = array();

    $commands[] = ajax_command_html('#govi-sdqs-crear-peticion-form', $html);

    return array('#type' => 'ajax', '#commands' => $commands);
}

// Define operaciones para la gestión del web service del SDQS
function govi_sdqs_default_wsclient_service() {

    $service = new WSClientServiceDescription();

    $service->name = 'sdqs';
    $service->label = 'Descripción del web service proporcionado por el Sistema Distrital de Quejas y Soluciones';
    // URL Temporal mientras se conoce el origen del recurso del SDQS
    $service->url = 'http://graphical.weather.gov/xml/SOAP_server/ndfdXMLserver.php?wsdl';
    $service->type = 'soap';

    try {
        $service->endpoint()->initializeMetaData();
        $services[$service->name] = $service;
    }
    catch (WSClientException $e) {
        watchdog('wsclient', $e->__toString());
    }

    return $services;
}
